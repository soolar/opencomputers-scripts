-- luarocks install luafilesystem
local lfs = require("lfs")

local f = io.open("programs.cfg", "w+")
if not f then
  error("Could not open programs.cfg for writing...")
end

local handlefileignore = { ["."] = true, [".."] = true, ["program.cfg"] = true }
local function handlefile(prog, file, path)
  if handlefileignore[file] then
    return
  end
  path = path or ""
  local filepath = prog .. '/' .. path .. file
  local attr = lfs.attributes(filepath)
  if attr.mode == "directory" then
    for subfile in lfs.dir(filepath) do
      handlefile(prog, subfile, path .. file .. '/')
    end
  else
    f:write('      ["master/' .. filepath .. '"] = "/' .. path:sub(1, -2) .. '",\n')
  end
end

local function handleprog(prog)
  f:write('  ' .. prog .. ' = {\n')
  f:write('    files = {\n')
  for file in lfs.dir(prog) do
    handlefile(prog, file)
  end
  f:write('    },\n')
  f:write('    repo = "tree/master/' .. prog .. '",\n')
  
  dofile(prog .. '/program.cfg')
  f:write('    name = "' .. progcfg.name .. '",\n')
  f:write('    description = "' .. progcfg.description .. '",\n')
  f:write('    authors = "' .. progcfg.authors .. '"\n')
  f:write('  },\n')
end

local handledirignore = { ["."] = true, [".."] = true, [".git"] = true }
local function handledir(file)
  if handledirignore[file] then
    return
  end
  local attr = lfs.attributes(file)
  if attr.mode ~= "directory" then
    return
  end
  handleprog(file)
end

f:write('-- This file is generated automatically by gencfg.lua\n')
f:write('-- Do not edit this file manually!\n')
f:write('{\n')

for file in lfs.dir(".") do
  handledir(file)
end

f:write('}\n')

f:close()
